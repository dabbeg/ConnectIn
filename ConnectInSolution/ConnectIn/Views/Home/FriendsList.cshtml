@model IEnumerable<ConnectIn.Models.ViewModels.FriendViewModel>
@using ConnectIn.DAL
@using ConnectIn.Services
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "FriendsList";
}

@if (Request.IsAuthenticated)
{
    <div class="container">
        <h2>Friends</h2>
        <div id="posts" class="row">

            @foreach (var item in Model)
            {
                <div id="removeFriend-@item.User.UserId">
                    @{
                var db = new ApplicationDbContext();
                var userService = new UserService(db);
                var friendList = userService.GetFriendsFromUser(User.Identity.GetUserId());
                <div class="post item span3" style="position:relative">
                    <div class="well" id="FriendsListWell">
                        <div class="friendsListPhoto">
                            <a href="/Home/Profile/@item.User.UserId"><img class="img-responsive img-rounded smallPhoto" src="@Url.Content(item.User.ProfilePicture)" alt="Profile Picture" /></a>
                        </div>
                        <div class="friendsListAbout">
                            <div class="friendsListName">
                                <h2 class="friendsListName">
                                    @Html.ActionLink(item.User.Name, "Profile", new { id = item.User.UserId })
                                </h2>
                            </div>

                            <table class="tableFriends">
                                <tbody>
                                    <tr>
                                        <td class="glyphicon glyphicon-briefcase tableItem">
                                            Work
                                        </td>
                                        <td class="glyphicon workFriendsList tableItemInfo">
                                            <span>@string.Format("{0}", item.User.Work)</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="glyphicon glyphicon-pencil tableItem">
                                            School
                                        </td>
                                        <td class="glyphicon schoolFriendsList tableItemInfo">
                                            <span>@string.Format("{0}", item.User.School)</span>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div id="removeFriendButtonFriendsListAbsolute">
                        <input type="hidden" name="userId" value="@User.Identity.GetUserId()" />
                        <input type="hidden" name="friendId" value="@item.User.UserId" />
                        <button type="submit" class="btn btn-danger removeFriend"><span class="glyphicon glyphicon-minus"></span>&nbsp;Remove friend</button>
                    </div>

                    <div id="bfOrFamilyFriendsListAbsolute">
                        @if (item.User.UserId != User.Identity.GetUserId() && friendList.Contains(item.User.UserId))
                        {
                            <button id="bestFriend-@item.User.UserId" type="submit" class="btnNew btn-default-clicked bestFriend"><img id="bffamimg" src="@Url.Content(@item.User.BfStar)" alt="Star" /><span class="glyphicon bffam">Best Friend</span></button>
                            <input type="hidden" name="friendId" value="@item.User.UserId" />
                            <button id="family-@item.User.UserId" type="submit" class="btnNew btn-default-clicked family"><img id="bffamimg" src="@Url.Content(@item.User.FStar)" alt="Star" /><span class="glyphicon bffam">Family</span></button>
                        }
                    </div>
                </div>

                    }
                </div>
            }
        </div>
    </div>
}
else
{
    <h1 id="loginSignUpMessage">
        Please log in or sign up to access your News Feed.
    </h1>
}






