@using ConnectIn.DAL
@using ConnectIn.Services
@using Microsoft.AspNet.Identity
@model ConnectIn.Models.ViewModels.ProfileViewModel

@{
    ViewBag.Title = "NewsFeed";
}
@if (Request.IsAuthenticated)
{

    <div class="coverPhotoProfile" style="background-image: url(@Url.Content(Model.User.CoverPhoto));">
        <div class="coverPhotoGradient" >
            <div class="pull-right">
                @{
    var db = new ApplicationDbContext();
    var userService = new UserService(db);
                    var notificationService = new NotificationService(db);
    var friendShip = userService.GetFriendShip(User.Identity.GetUserId(), Model.User.UserId);
                }
                <div id="addFriendButton">
                    @if (Model.User.UserId != User.Identity.GetUserId())
                    {
                        var listOfFriends = userService.GetFriendsFromUser(User.Identity.GetUserId());
                        var notification = notificationService.GetIfFriendRequestIsPending(User.Identity.GetUserId(), Model.User.UserId);
                        if (notification != null)
                        {
                            <button type="button" class="btn">Pending</button>
                        }
                        else if (listOfFriends.Contains(@Model.User.UserId))
                        {
                            using (Html.BeginForm("Remove", "Friend"))
                            {

                                <input type="hidden" name="userId" value="@User.Identity.GetUserId()" />
                                <input type="hidden" name="friendId" value="@Model.User.UserId" />
                                <button type="submit" class="btn btn-danger dangerFix">
                                    <i class=" glyphicon glyphicon-minus"></i>&nbsp;Remove friend
                                </button>
                            }
                        }
                        else
                        {
                            <div id="addFriend-@Model.User.UserId">
                                <input type="hidden" name="userId" value="@User.Identity.GetUserId()" />
                                <input type="hidden" name="friendId" value="@Model.User.UserId" />
                                <button type="submit" class="btn btn-success addFriend"><i class="glyphicon glyphicon-plus"></i>&nbsp;Add friend</button>
                            </div>
                        }
                    }
                </div>
                <div class="profileStars">

                    @if (Model.User.UserId != User.Identity.GetUserId() && friendShip != null)
                    {
                        <button id="bestFriend-@Model.User.UserId" style="color: white;" type="submit" class="btnNew btn-default-clicked bestFriend"><img id="bffamimg" src="@Url.Content(@Model.User.BfStar)" alt="Star" /><span class="glyphicon bffam starColor">Best Friend</span></button>
                        <input type="hidden" name="friendId" value="@Model.User.UserId" />

                        <button id="family-@Model.User.UserId" style="color: white;" type="submit" class="btnNew btn-default-clicked family"><img id="bffamimg" src="@Url.Content(@Model.User.FStar)" alt="Star" /><span class="glyphicon bffam starColor">Family</span></button>
                        <input type="hidden" name="friendId" value="@Model.User.UserId" />
                    }
                </div>
            </div>
            <div id="userProfilePicture">
                <img class="img-responsiveProfilePic img-thumbnail" src="@Url.Content(Model.User.ProfilePicture)" alt="Profile Picture" />
            </div>
            <div id="userNameOnProfile">

                <h1 id="userNameH1">
                    @string.Format("{0}", Model.User.Name)
                </h1>

                @{
                    var user = userService.GetUserById(Model.User.UserId);
                    friendShip = userService.GetFriendShip(user.Id, User.Identity.GetUserId());
                    if (user.Id == User.Identity.GetUserId() || user.Privacy == 0 || (user.Privacy == 1 && friendShip != null) || (user.Privacy == 2 && userService.FriendConsidersUserClose(user.Id, User.Identity.GetUserId())))
                    {
                        <div id="PhotoButton">
                            @using (Html.BeginForm("Images", "Photo", FormMethod.Get))
                            {
                                <input type="hidden" name="userId" value="@Model.User.UserId"/>
                                <button type="submit" class="btn fa fa-camera btn-primary"></button>
                            }
                        </div>
                    }
                }

            </div>
        </div>
    </div>
    <div id="profileborder"></div>
    
    <div class="well" id="aboutUser">
                    <table class="tableFriends">
                        <tbody>
                        <tr>
                            <td class="glyphicon glyphicon-user tableItem">
                                Gender
                            </td>
                            <td class="glyphicon profileGender tableItemInfo">
                                <span>@string.Format("{0}", Model.User.Gender)</span>
                            </td>
                        </tr>
                        <tr>
                            <td class="glyphicon glyphicon-gift tableItem">
                                Birthday
                            </td>
                            <td class="glyphicon profileBirthday tableItemInfo">
                                <span>@string.Format("{0}.{1}.{2}", Model.User.Birthday.Day, Model.User.Birthday.Month, Model.User.Birthday.Year)</span>
                            </td>
                        </tr>
                        <tr>
                            <td class="glyphicon glyphicon-briefcase tableItem">
                                Work
                            </td>
                            <td class="glyphicon workFriendsList tableItemInfo">
                                <span>@string.Format("{0}", Model.User.Work)</span>
                            </td>
                        </tr>
                        <tr>
                            <td class="glyphicon glyphicon-book tableItem">
                                School
                            </td>
                            <td class="glyphicon schoolFriendsList tableItemInfo">
                                <span>@string.Format("{0}", Model.User.School)</span>
                            </td>
                        </tr>
                        <tr>
                            <td class="glyphicon glyphicon-home tableItem">
                                Address
                            </td>
                            <td class="glyphicon workFriendsList tableItemInfo">
                                <span>@string.Format("{0}", Model.User.Address)</span>
                            </td>
                        </tr>
                        @if (Model.User.UserId == User.Identity.GetUserId())
                        {
                            <tr>
                                <td id="hidebutton" class="glyphicon  tableItem">
                                    <a id="Editpencil" href="@Url.Action("Edit", "Account")" class="glyphicon-pencil">
                                        Edit
                                    </a>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
    
    
    
    {
        if (user.Id == User.Identity.GetUserId() || user.Privacy == 0 || (user.Privacy == 1 && friendShip != null) || (user.Privacy == 2 && userService.FriendConsidersUserClose(user.Id, User.Identity.GetUserId())))
        {
            <div id="ProfilePostWell">
                @{
                    Html.RenderPartial("PostsPartial", Model.NewsFeed);
                }
            </div>
        }
    }
}
else
{
    <h1 id="loginSignUpMessage">
        Please log in or sign up to access Profile.
    </h1>
}
