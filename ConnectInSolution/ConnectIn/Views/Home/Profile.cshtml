@using ConnectIn.DAL
@using ConnectIn.Services
@using Microsoft.AspNet.Identity
@model ConnectIn.Models.ViewModels.ProfileViewModel

@{
    ViewBag.Title = "NewsFeed";
}
@if (Request.IsAuthenticated)
{
   
        <div class="container">
           
                <div class="panel1" id="coverphooto">
                    <img id="cover" class="img-rounded" src="@Url.Content(Model.User.CoverPhoto)" />
                </div>
                <div class="well2"  id="ProfileWell">
                    <div id="userProfilePicture">
                        <a href="/Home/UploadImage"><img class="img-responsiveProfilePic img-rounded " src="@Url.Content(Model.User.ProfilePicture)" alt="Profile Picture" /></a>
                    </div>
                        <div class="well" id="aboutUser">
                            <h1>
                                @string.Format("{0}", Model.User.Name)
                            </h1> 

                            <table class="tableFriends">
                                <tbody> 
                                    <tr>
                                        <td class="glyphicon glyphicon-user tableItem">
                                            Gender
                                        </td>
                                        <td class="glyphicon profileGender tableItemInfo">
                                            <span>@string.Format("{0}", Model.User.Gender)</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="glyphicon glyphicon-gift tableItem">
                                            Birthday
                                        </td>
                                        <td class="glyphicon profileBirthday tableItemInfo">
                                            <span>@string.Format("{0}.{1}.{2}", Model.User.Birthday.Day, Model.User.Birthday.Month, Model.User.Birthday.Year)</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="glyphicon glyphicon-briefcase tableItem">
                                            Work
                                        </td>
                                        <td class="glyphicon workFriendsList tableItemInfo">
                                            <span>@string.Format("{0}", Model.User.Work)</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="glyphicon glyphicon-book tableItem">
                                            School
                                        </td>
                                        <td class="glyphicon schoolFriendsList tableItemInfo">
                                            <span>@string.Format("{0}", Model.User.School)</span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="glyphicon glyphicon-home tableItem">
                                            Address
                                        </td>
                                        <td class="glyphicon workFriendsList tableItemInfo">
                                            <span>@string.Format("{0}", Model.User.Address)</span>
                                        </td>
                                    </tr>
                                    @if (Model.User.UserId == User.Identity.GetUserId())
                                    {
                                        <tr>
                                            <td id="hidebutton" class="hideedit">
                                                <a id="Editpencil" href="@Url.Action("Edit", "Account")">
                                                    <i class="glyphicon glyphicon-pencil">Edit</i>
                                                    <span class="sr-only">Edit</span>
                                                </a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <span id="PhotoButton">
                                @using (Html.BeginForm("Images", "Home", new { userId = Model.User.UserId }))
                                {
                                    <button type="submit" class="btn btn-primary">Photos</button>
                                }

                            </span>
                        </div>
                    <div class="stars">
                        @if (Model.User.UserId != User.Identity.GetUserId())
                        {
                            <button id="bestFriend-@Model.User.UserId" type="submit" class="btnNew btn-default-clicked bestFriend"><img id="bffamimg" src="@Url.Content(@Model.User.BfStar)" alt="Star" /><span class="glyphicon bffam">Best Friend</span></button>
                            <input type="hidden" name="friendId" value="@Model.User.UserId" />
                            <button id="family-@Model.User.UserId" type="submit" class="btnNew btn-default-clicked family"><img id="bffamimg" src="@Url.Content(@Model.User.FStar)" alt="Star" /><span class="glyphicon bffam">Family</span></button>
                            <input type="hidden" name="friendId" value="@Model.User.UserId" />
                        }
                    </div>

                    
                        </div>

                   
                        <div id="addFriendButton">
                            @{
    if (Model.User.UserId != User.Identity.GetUserId())
    {
        var context = new ApplicationDbContext();
        var userService = new UserService(context);
        var listOfFriends = userService.GetFriendsFromUser(User.Identity.GetUserId());
        var notification = userService.GetIfFriendRequestIsPending(User.Identity.GetUserId(), Model.User.UserId);
        if (notification != null)
        {
            <button type="button" class="btn">Pending</button>
        }
        else if (listOfFriends.Contains(@Model.User.UserId))
        {
            using (Html.BeginForm("Remove", "Friend"))
            {
                <input type="hidden" name="userId" value="@User.Identity.GetUserId()" />
                                <input type="hidden" name="friendId" value="@Model.User.UserId" />
                                <button type="submit" class="btn btn-danger"><span class="glyphicon glyphicon-minus"></span>&nbsp;Remove friend</button>
            }
        }
        else
        {
            using (Html.BeginForm("Add", "Friend"))
            {
                <input type="hidden" name="userId" value="@User.Identity.GetUserId()" />
                                <input type="hidden" name="friendId" value="@Model.User.UserId" />
                                <button type="submit" class="btn btn-success"><span class="glyphicon glyphicon-plus"></span>&nbsp;Add friend</button>
            }
        }
    }
                            }
                        </div>
                    </div>
               





        <div id="profileborder"></div>




    {
        Html.RenderPartial("PostsPartial", Model.NewsFeed);
    }
}
else
{
    <h1 id="loginSignUpMessage">
        Please log in or sign up to access Profile.
    </h1>
}
