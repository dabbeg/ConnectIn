@using Microsoft.AspNet.Identity
@model ConnectIn.Models.ViewModels.NewsFeedViewModel


<div class="container">
    <div id="posts" class="row">
        @foreach (var item in Model.Posts)
{
    <div class="post item span3">
        <div class="well" id="FriendsListWell">
            <div id="postContent">
                <!--Should display user's profile picture, a cat was used temporarily-->
                <div class="PostPartialViewPhoto">
                    <img class="PartialViewResponsive  img-rounded" src="@Url.Content(item.User.ProfilePicture)" alt="Profile Picture" />
                </div>
                <!--Should display username instead of item.userID-->
                <div class="friendsListName">
                    <h3>
                        @Html.ActionLink(item.User.Name, "Profile", new { id = item.User.UserId })<small class="pull-right">@Html.DisplayFor(modelItem => item.DateInserted)</small>
                    </h3>
                </div>
                <p id="PartialPostsText">
                    @item.Body
                </p>
            </div>

            <div id="commentsLikesDeleteDiv">
                <div id="commentsAndLikes">
                    <div id="reactionButtons">
                        @using (Html.BeginForm("Like", "Status"))
                        {
                            
                            var action = ViewContext.RouteData.GetRequiredString("action");
                            <input type="hidden" name="location" value="@action"/>
                            <input type="hidden" name="postId" value="@item.PostId"/>
                            <input type="hidden" name="id" value="@Model.Id" />
                            
                            <button type="submit" class="btnNew btn-default-like">@item.LikeDislikeComment.Likes Smiles</button>
                        }
                        @using (Html.BeginForm("Dislike", "Status"))
                        {
                            
                            var action = ViewContext.RouteData.GetRequiredString("action");
                            <input type="hidden" name="location" value="@action"/>
                            <input type="hidden" name="postId" value="@item.PostId" />
                            <input type="hidden" name="id" value="@Model.Id" />

                            <button type="submit" class="btnNew btn-default-dislike">@item.LikeDislikeComment.Dislikes Sadfaces</button>
                        }
                        @using (Html.BeginForm("Comment", "Status", new { PostId = item.PostId }))
                        {
                            <input type="hidden" name="postId" value="@item.PostId"/>
                            <button type="submit" class="btnNew btn-default-comment">@item.LikeDislikeComment.Comments Comments</button>
                        }
                        @if (item.User.UserId == User.Identity.GetUserId())
                        {
                            using (Html.BeginForm("RemovePost", "Status", new { postId = item.PostId }))
                            {
                                <button type="submit" class="btn btn-danger deletePostButton">Delete Post</button>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
}
    </div>
</div>

